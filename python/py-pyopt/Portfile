# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem              1.0
PortGroup               python 1.0
PortGroup               compilers 1.0
PortGroup               github 1.0

name                    py-pyopt
maintainers             nomaintainer
platforms               darwin
supported_archs         noarch

description             Python package for formulating and solving nonlinear constrained optimization problems
long_description        pyOpt is a Python package for formulating and solving nonlinear constrained optimization problems
license                 LGPL
homepage                http://pyopt.org/

## for version 1.2.0 (which does not work with current numpy)
#version                 1.2.0
#master_sites            http://www.pyopt.org/_downloads/
#distname                pyOpt-${version}
#extract.suffix          .tar.gz
#checksums               rmd160  62ace359e6b6aa56cc2c9ecd20dccda745826e48 \
#                        sha256  f31d9b517d2eca70cd34658778ef6d495294ddf08bdb7851efad2f8db1de54e5

## for github checkout
github.setup            madebr pyOpt efb77d84ab1177b9e63b9b21aaf7b6dd30fe47e9
version                 20170325
checksums               rmd160  66757e6af2f9f60393bfffd29f5cd4147cc1d545 \
                        sha256  7a089e62d481008e53a261f70158207f19bd187a17fd4c67b4eccb81387f6313

python.versions         25 26 27

if {${name} ne ${subport}} {
    compilers.choose        f77 f90 fc
    compilers.setup         require_fortran

    depends_build-append    port:py${python.version}-setuptools \
                            port:py${python.version}-numpy \
                            port:py${python.version}-mpi4py \
                            port:swig-python

    # Insert my own archflags, so I can edit LDFLAGS
    python.add_archflags no

    build.env-append CFLAGS="${configure.cc_archflags}" \
                     OBJCFLAGS="${configure.objc_archflags}" \
                     CXXFLAGS="${configure.cxx_archflags}" \
                     FFLAGS="${configure.f77_archflags}" \
                     F90FLAGS="${configure.f90_archflags}" \
                     FCFLAGS="${configure.fc_archflags}" \
                     LDFLAGS="-undefined dynamic_lookup -bundle ${configure.ld_archflags}"

    livecheck.type  none
}
